/********************************************************************************
** Form generated from reading UI file 'point_set_base.ui'
**
** Created: Thu 23. Jun 17:50:28 2016
**      by: Qt User Interface Compiler version 4.7.3
**
** WARNING! All changes made in this file will be lost when recompiling UI file!
********************************************************************************/

#ifndef UI_POINT_SET_BASE_H
#define UI_POINT_SET_BASE_H

#include <QtCore/QVariant>
#include <QtGui/QAction>
#include <QtGui/QApplication>
#include <QtGui/QButtonGroup>
#include <QtGui/QCheckBox>
#include <QtGui/QFrame>
#include <QtGui/QGridLayout>
#include <QtGui/QGroupBox>
#include <QtGui/QHBoxLayout>
#include <QtGui/QHeaderView>
#include <QtGui/QLabel>
#include <QtGui/QLineEdit>
#include <QtGui/QPushButton>
#include <QtGui/QSpacerItem>
#include <QtGui/QSpinBox>
#include <QtGui/QVBoxLayout>
#include <QtGui/QWidget>

QT_BEGIN_NAMESPACE

class Ui_Point_set_base
{
public:
    QVBoxLayout *vboxLayout;
    QHBoxLayout *hboxLayout;
    QSpacerItem *spacer12;
    QPushButton *load_button_;
    QPushButton *save_button_;
    QSpacerItem *spacer11;
    QSpacerItem *spacer10_3_2;
    QHBoxLayout *hboxLayout1;
    QLabel *textLabel1;
    QFrame *line1;
    QSpacerItem *spacer10_3;
    QHBoxLayout *hboxLayout2;
    QSpacerItem *spacer7;
    QGridLayout *gridLayout;
    QLineEdit *lag_tol_;
    QLabel *TextLabel4;
    QSpinBox *num_lags_;
    QLabel *TextLabel1_2;
    QLabel *TextLabel1;
    QLineEdit *lag_sep_;
    QSpacerItem *Spacer9;
    QLabel *pixmapLabel6;
    QSpacerItem *spacer18;
    QSpacerItem *Spacer10;
    QHBoxLayout *hboxLayout3;
    QLabel *textLabel1_2;
    QFrame *line1_2;
    QSpacerItem *spacer10_2;
    QHBoxLayout *hboxLayout4;
    QSpacerItem *spacer14;
    QLabel *textLabel1_4;
    QSpinBox *directions_count_;
    QSpacerItem *spacer15;
    QLabel *pixmapLabel5;
    QSpacerItem *spacer17;
    QLabel *textLabel1_5;
    QSpacerItem *spacer16;
    QGroupBox *table_frame_;
    QSpacerItem *Spacer10_2;
    QGroupBox *standardize_options_box_;
    QVBoxLayout *vboxLayout1;
    QHBoxLayout *hboxLayout5;
    QLabel *textLabel1_3;
    QFrame *line1_3;
    QSpacerItem *spacer10;
    QHBoxLayout *hboxLayout6;
    QSpacerItem *spacer8_2;
    QCheckBox *standardize_checkbox_;
    QSpacerItem *spacer8;
    QSpacerItem *spacer5;

    void setupUi(QWidget *Point_set_base)
    {
        if (Point_set_base->objectName().isEmpty())
            Point_set_base->setObjectName(QString::fromUtf8("Point_set_base"));
        Point_set_base->resize(637, 656);
        vboxLayout = new QVBoxLayout(Point_set_base);
        vboxLayout->setSpacing(6);
        vboxLayout->setContentsMargins(14, 14, 14, 14);
        vboxLayout->setObjectName(QString::fromUtf8("vboxLayout"));
        hboxLayout = new QHBoxLayout();
        hboxLayout->setSpacing(6);
        hboxLayout->setContentsMargins(0, 0, 0, 0);
        hboxLayout->setObjectName(QString::fromUtf8("hboxLayout"));
        spacer12 = new QSpacerItem(200, 20, QSizePolicy::Expanding, QSizePolicy::Minimum);

        hboxLayout->addItem(spacer12);

        load_button_ = new QPushButton(Point_set_base);
        load_button_->setObjectName(QString::fromUtf8("load_button_"));

        hboxLayout->addWidget(load_button_);

        save_button_ = new QPushButton(Point_set_base);
        save_button_->setObjectName(QString::fromUtf8("save_button_"));

        hboxLayout->addWidget(save_button_);

        spacer11 = new QSpacerItem(31, 20, QSizePolicy::Minimum, QSizePolicy::Minimum);

        hboxLayout->addItem(spacer11);


        vboxLayout->addLayout(hboxLayout);

        spacer10_3_2 = new QSpacerItem(20, 16, QSizePolicy::Minimum, QSizePolicy::Fixed);

        vboxLayout->addItem(spacer10_3_2);

        hboxLayout1 = new QHBoxLayout();
        hboxLayout1->setSpacing(6);
        hboxLayout1->setContentsMargins(0, 0, 0, 0);
        hboxLayout1->setObjectName(QString::fromUtf8("hboxLayout1"));
        textLabel1 = new QLabel(Point_set_base);
        textLabel1->setObjectName(QString::fromUtf8("textLabel1"));
        QSizePolicy sizePolicy(static_cast<QSizePolicy::Policy>(0), static_cast<QSizePolicy::Policy>(5));
        sizePolicy.setHorizontalStretch(0);
        sizePolicy.setVerticalStretch(0);
        sizePolicy.setHeightForWidth(textLabel1->sizePolicy().hasHeightForWidth());
        textLabel1->setSizePolicy(sizePolicy);
        QFont font;
        font.setBold(true);
        textLabel1->setFont(font);
        textLabel1->setWordWrap(false);

        hboxLayout1->addWidget(textLabel1);

        line1 = new QFrame(Point_set_base);
        line1->setObjectName(QString::fromUtf8("line1"));
        QSizePolicy sizePolicy1(static_cast<QSizePolicy::Policy>(7), static_cast<QSizePolicy::Policy>(0));
        sizePolicy1.setHorizontalStretch(0);
        sizePolicy1.setVerticalStretch(0);
        sizePolicy1.setHeightForWidth(line1->sizePolicy().hasHeightForWidth());
        line1->setSizePolicy(sizePolicy1);
        line1->setFrameShape(QFrame::HLine);
        line1->setFrameShadow(QFrame::Raised);

        hboxLayout1->addWidget(line1);


        vboxLayout->addLayout(hboxLayout1);

        spacer10_3 = new QSpacerItem(20, 16, QSizePolicy::Minimum, QSizePolicy::Fixed);

        vboxLayout->addItem(spacer10_3);

        hboxLayout2 = new QHBoxLayout();
        hboxLayout2->setSpacing(6);
        hboxLayout2->setContentsMargins(0, 0, 0, 0);
        hboxLayout2->setObjectName(QString::fromUtf8("hboxLayout2"));
        spacer7 = new QSpacerItem(120, 20, QSizePolicy::Preferred, QSizePolicy::Minimum);

        hboxLayout2->addItem(spacer7);

        gridLayout = new QGridLayout();
        gridLayout->setSpacing(6);
        gridLayout->setContentsMargins(0, 0, 0, 0);
        gridLayout->setObjectName(QString::fromUtf8("gridLayout"));
        lag_tol_ = new QLineEdit(Point_set_base);
        lag_tol_->setObjectName(QString::fromUtf8("lag_tol_"));
        QSizePolicy sizePolicy2(static_cast<QSizePolicy::Policy>(1), static_cast<QSizePolicy::Policy>(0));
        sizePolicy2.setHorizontalStretch(0);
        sizePolicy2.setVerticalStretch(0);
        sizePolicy2.setHeightForWidth(lag_tol_->sizePolicy().hasHeightForWidth());
        lag_tol_->setSizePolicy(sizePolicy2);

        gridLayout->addWidget(lag_tol_, 2, 1, 1, 1);

        TextLabel4 = new QLabel(Point_set_base);
        TextLabel4->setObjectName(QString::fromUtf8("TextLabel4"));
        TextLabel4->setWordWrap(false);

        gridLayout->addWidget(TextLabel4, 2, 0, 1, 1);

        num_lags_ = new QSpinBox(Point_set_base);
        num_lags_->setObjectName(QString::fromUtf8("num_lags_"));
        num_lags_->setMaximum(500);
        num_lags_->setMinimum(1);
        num_lags_->setSingleStep(1);

        gridLayout->addWidget(num_lags_, 0, 1, 1, 1);

        TextLabel1_2 = new QLabel(Point_set_base);
        TextLabel1_2->setObjectName(QString::fromUtf8("TextLabel1_2"));
        TextLabel1_2->setWordWrap(false);

        gridLayout->addWidget(TextLabel1_2, 1, 0, 1, 1);

        TextLabel1 = new QLabel(Point_set_base);
        TextLabel1->setObjectName(QString::fromUtf8("TextLabel1"));
        TextLabel1->setWordWrap(false);

        gridLayout->addWidget(TextLabel1, 0, 0, 1, 1);

        lag_sep_ = new QLineEdit(Point_set_base);
        lag_sep_->setObjectName(QString::fromUtf8("lag_sep_"));
        sizePolicy2.setHeightForWidth(lag_sep_->sizePolicy().hasHeightForWidth());
        lag_sep_->setSizePolicy(sizePolicy2);

        gridLayout->addWidget(lag_sep_, 1, 1, 1, 1);


        hboxLayout2->addLayout(gridLayout);

        Spacer9 = new QSpacerItem(160, 20, QSizePolicy::Expanding, QSizePolicy::Minimum);

        hboxLayout2->addItem(Spacer9);

        pixmapLabel6 = new QLabel(Point_set_base);
        pixmapLabel6->setObjectName(QString::fromUtf8("pixmapLabel6"));
        pixmapLabel6->setPixmap(qt_get_icon(image0_ID));
        pixmapLabel6->setScaledContents(true);
        pixmapLabel6->setWordWrap(false);

        hboxLayout2->addWidget(pixmapLabel6);

        spacer18 = new QSpacerItem(40, 20, QSizePolicy::Fixed, QSizePolicy::Minimum);

        hboxLayout2->addItem(spacer18);


        vboxLayout->addLayout(hboxLayout2);

        Spacer10 = new QSpacerItem(20, 16, QSizePolicy::Minimum, QSizePolicy::Fixed);

        vboxLayout->addItem(Spacer10);

        hboxLayout3 = new QHBoxLayout();
        hboxLayout3->setSpacing(6);
        hboxLayout3->setContentsMargins(0, 0, 0, 0);
        hboxLayout3->setObjectName(QString::fromUtf8("hboxLayout3"));
        textLabel1_2 = new QLabel(Point_set_base);
        textLabel1_2->setObjectName(QString::fromUtf8("textLabel1_2"));
        sizePolicy.setHeightForWidth(textLabel1_2->sizePolicy().hasHeightForWidth());
        textLabel1_2->setSizePolicy(sizePolicy);
        textLabel1_2->setFont(font);
        textLabel1_2->setWordWrap(false);

        hboxLayout3->addWidget(textLabel1_2);

        line1_2 = new QFrame(Point_set_base);
        line1_2->setObjectName(QString::fromUtf8("line1_2"));
        sizePolicy1.setHeightForWidth(line1_2->sizePolicy().hasHeightForWidth());
        line1_2->setSizePolicy(sizePolicy1);
        line1_2->setFrameShape(QFrame::HLine);
        line1_2->setFrameShadow(QFrame::Raised);

        hboxLayout3->addWidget(line1_2);


        vboxLayout->addLayout(hboxLayout3);

        spacer10_2 = new QSpacerItem(20, 16, QSizePolicy::Minimum, QSizePolicy::Fixed);

        vboxLayout->addItem(spacer10_2);

        hboxLayout4 = new QHBoxLayout();
        hboxLayout4->setSpacing(6);
        hboxLayout4->setContentsMargins(0, 0, 0, 0);
        hboxLayout4->setObjectName(QString::fromUtf8("hboxLayout4"));
        spacer14 = new QSpacerItem(120, 20, QSizePolicy::Preferred, QSizePolicy::Minimum);

        hboxLayout4->addItem(spacer14);

        textLabel1_4 = new QLabel(Point_set_base);
        textLabel1_4->setObjectName(QString::fromUtf8("textLabel1_4"));
        textLabel1_4->setWordWrap(false);

        hboxLayout4->addWidget(textLabel1_4);

        directions_count_ = new QSpinBox(Point_set_base);
        directions_count_->setObjectName(QString::fromUtf8("directions_count_"));
        directions_count_->setButtonSymbols(QAbstractSpinBox::UpDownArrows);
        directions_count_->setMaximum(20);
        directions_count_->setMinimum(1);

        hboxLayout4->addWidget(directions_count_);

        spacer15 = new QSpacerItem(78, 21, QSizePolicy::Expanding, QSizePolicy::Minimum);

        hboxLayout4->addItem(spacer15);

        pixmapLabel5 = new QLabel(Point_set_base);
        pixmapLabel5->setObjectName(QString::fromUtf8("pixmapLabel5"));
        pixmapLabel5->setPixmap(qt_get_icon(image1_ID));
        pixmapLabel5->setScaledContents(true);
        pixmapLabel5->setWordWrap(false);

        hboxLayout4->addWidget(pixmapLabel5);

        spacer17 = new QSpacerItem(16, 20, QSizePolicy::Fixed, QSizePolicy::Minimum);

        hboxLayout4->addItem(spacer17);

        textLabel1_5 = new QLabel(Point_set_base);
        textLabel1_5->setObjectName(QString::fromUtf8("textLabel1_5"));
        textLabel1_5->setMinimumSize(QSize(150, 0));
        textLabel1_5->setWordWrap(false);

        hboxLayout4->addWidget(textLabel1_5);


        vboxLayout->addLayout(hboxLayout4);

        spacer16 = new QSpacerItem(20, 16, QSizePolicy::Minimum, QSizePolicy::Fixed);

        vboxLayout->addItem(spacer16);

        table_frame_ = new QGroupBox(Point_set_base);
        table_frame_->setObjectName(QString::fromUtf8("table_frame_"));

        vboxLayout->addWidget(table_frame_);

        Spacer10_2 = new QSpacerItem(20, 16, QSizePolicy::Minimum, QSizePolicy::Fixed);

        vboxLayout->addItem(Spacer10_2);

        standardize_options_box_ = new QGroupBox(Point_set_base);
        standardize_options_box_->setObjectName(QString::fromUtf8("standardize_options_box_"));
        vboxLayout1 = new QVBoxLayout(standardize_options_box_);
        vboxLayout1->setSpacing(0);
        vboxLayout1->setContentsMargins(0, 0, 0, 0);
        vboxLayout1->setObjectName(QString::fromUtf8("vboxLayout1"));
        hboxLayout5 = new QHBoxLayout();
        hboxLayout5->setSpacing(6);
        hboxLayout5->setContentsMargins(0, 0, 0, 0);
        hboxLayout5->setObjectName(QString::fromUtf8("hboxLayout5"));
        textLabel1_3 = new QLabel(standardize_options_box_);
        textLabel1_3->setObjectName(QString::fromUtf8("textLabel1_3"));
        sizePolicy.setHeightForWidth(textLabel1_3->sizePolicy().hasHeightForWidth());
        textLabel1_3->setSizePolicy(sizePolicy);
        textLabel1_3->setFont(font);
        textLabel1_3->setWordWrap(false);

        hboxLayout5->addWidget(textLabel1_3);

        line1_3 = new QFrame(standardize_options_box_);
        line1_3->setObjectName(QString::fromUtf8("line1_3"));
        sizePolicy1.setHeightForWidth(line1_3->sizePolicy().hasHeightForWidth());
        line1_3->setSizePolicy(sizePolicy1);
        line1_3->setFrameShape(QFrame::HLine);
        line1_3->setFrameShadow(QFrame::Raised);

        hboxLayout5->addWidget(line1_3);


        vboxLayout1->addLayout(hboxLayout5);

        spacer10 = new QSpacerItem(20, 16, QSizePolicy::Minimum, QSizePolicy::Fixed);

        vboxLayout1->addItem(spacer10);

        hboxLayout6 = new QHBoxLayout();
        hboxLayout6->setSpacing(6);
        hboxLayout6->setContentsMargins(0, 0, 0, 0);
        hboxLayout6->setObjectName(QString::fromUtf8("hboxLayout6"));
        spacer8_2 = new QSpacerItem(51, 20, QSizePolicy::Expanding, QSizePolicy::Minimum);

        hboxLayout6->addItem(spacer8_2);

        standardize_checkbox_ = new QCheckBox(standardize_options_box_);
        standardize_checkbox_->setObjectName(QString::fromUtf8("standardize_checkbox_"));

        hboxLayout6->addWidget(standardize_checkbox_);

        spacer8 = new QSpacerItem(51, 20, QSizePolicy::Expanding, QSizePolicy::Minimum);

        hboxLayout6->addItem(spacer8);


        vboxLayout1->addLayout(hboxLayout6);


        vboxLayout->addWidget(standardize_options_box_);

        spacer5 = new QSpacerItem(20, 20, QSizePolicy::Minimum, QSizePolicy::MinimumExpanding);

        vboxLayout->addItem(spacer5);

        QWidget::setTabOrder(num_lags_, lag_sep_);
        QWidget::setTabOrder(lag_sep_, lag_tol_);
        QWidget::setTabOrder(lag_tol_, directions_count_);
        QWidget::setTabOrder(directions_count_, standardize_checkbox_);
        QWidget::setTabOrder(standardize_checkbox_, load_button_);
        QWidget::setTabOrder(load_button_, save_button_);

        retranslateUi(Point_set_base);

        QMetaObject::connectSlotsByName(Point_set_base);
    } // setupUi

    void retranslateUi(QWidget *Point_set_base)
    {
        Point_set_base->setWindowTitle(QApplication::translate("Point_set_base", "Point_set_base", 0, QApplication::UnicodeUTF8));
        load_button_->setText(QApplication::translate("Point_set_base", "Load Parameters...", 0, QApplication::UnicodeUTF8));
        save_button_->setText(QApplication::translate("Point_set_base", "Save", 0, QApplication::UnicodeUTF8));
        textLabel1->setText(QApplication::translate("Point_set_base", "Lags", 0, QApplication::UnicodeUTF8));
        TextLabel4->setText(QApplication::translate("Point_set_base", "Lag tolerance", 0, QApplication::UnicodeUTF8));
        TextLabel1_2->setText(QApplication::translate("Point_set_base", "Lag separation", 0, QApplication::UnicodeUTF8));
        TextLabel1->setText(QApplication::translate("Point_set_base", "Number of lags", 0, QApplication::UnicodeUTF8));
        textLabel1_2->setText(QApplication::translate("Point_set_base", "Directions", 0, QApplication::UnicodeUTF8));
        textLabel1_4->setText(QApplication::translate("Point_set_base", "Number of directions", 0, QApplication::UnicodeUTF8));
        textLabel1_5->setText(QApplication::translate("Point_set_base", "<i>Angles are in degrees.<br>\n"
"\n"
"Use a tolerance tol > 90 to indicate an omni-directional variogram</i>", 0, QApplication::UnicodeUTF8));
        table_frame_->setTitle(QString());
        standardize_options_box_->setTitle(QString());
        textLabel1_3->setText(QApplication::translate("Point_set_base", "Misc.", 0, QApplication::UnicodeUTF8));
        standardize_checkbox_->setText(QApplication::translate("Point_set_base", "Standardize by Cov(head, tail)", 0, QApplication::UnicodeUTF8));
    } // retranslateUi


protected:
    enum IconID
    {
        image0_ID,
        image1_ID,
        unknown_ID
    };
    static QPixmap qt_get_icon(IconID id)
    {
    static const unsigned char image0_data[] = { 
    0x89, 0x50, 0x4e, 0x47, 0x0d, 0x0a, 0x1a, 0x0a, 0x00, 0x00, 0x00, 0x0d,
    0x49, 0x48, 0x44, 0x52, 0x00, 0x00, 0x00, 0x71, 0x00, 0x00, 0x00, 0x65,
    0x08, 0x06, 0x00, 0x00, 0x00, 0x7a, 0x39, 0x0c, 0x5d, 0x00, 0x00, 0x09,
    0x3b, 0x49, 0x44, 0x41, 0x54, 0x78, 0x9c, 0xed, 0x9d, 0xdd, 0x75, 0xe2,
    0x3a, 0x17, 0x86, 0xdf, 0x6d, 0x6c, 0x19, 0xae, 0x42, 0x07, 0xd0, 0x01,
    0x7c, 0x15, 0x84, 0xaf, 0x82, 0xd0, 0x41, 0x98, 0x0a, 0x92, 0x53, 0x01,
    0x39, 0x15, 0x4c, 0x4e, 0x05, 0xc9, 0x54, 0x90, 0x9c, 0x0a, 0x60, 0x2a,
    0x08, 0x53, 0xc1, 0x30, 0x15, 0x0c, 0x73, 0x35, 0xc3, 0x4f, 0xfc, 0x9e,
    0x0b, 0xcb, 0x89, 0x70, 0x20, 0x31, 0xb6, 0x6c, 0xc0, 0xf8, 0x5d, 0x4b,
    0x0b, 0x63, 0x6c, 0x21, 0xeb, 0xb1, 0xb6, 0x7e, 0x2c, 0x6d, 0x0b, 0x49,
    0x54, 0x3a, 0x6e, 0x39, 0xfb, 0x4e, 0x40, 0xa5, 0xec, 0x3a, 0x49, 0x88,
    0x22, 0x32, 0x14, 0x91, 0xe1, 0xbe, 0xd3, 0x61, 0x4b, 0xa5, 0x82, 0x28,
    0x22, 0x17, 0x22, 0xd2, 0xda, 0x77, 0x3a, 0x8a, 0x56, 0x69, 0x20, 0x8a,
    0x48, 0x07, 0xc0, 0x0d, 0x80, 0xbe, 0xde, 0x8e, 0xf6, 0xb7, 0xca, 0x0e,
    0xd6, 0xdd, 0x77, 0x02, 0x2c, 0xaa, 0x0b, 0xa0, 0xa9, 0x3f, 0x67, 0x22,
    0x32, 0x05, 0xf0, 0x08, 0x60, 0x0a, 0x00, 0x22, 0xd2, 0x06, 0xd0, 0x27,
    0xf9, 0x2b, 0x4d, 0xe4, 0xae, 0x6a, 0x5c, 0x8a, 0xf0, 0x7a, 0xb5, 0x98,
    0xf7, 0xd2, 0xc6, 0x91, 0x97, 0x4a, 0x53, 0x12, 0x49, 0x7e, 0x41, 0x08,
    0xec, 0x5e, 0x6f, 0x0f, 0x00, 0x8c, 0x49, 0x7e, 0x22, 0xf9, 0x09, 0xc0,
    0x58, 0xef, 0x4b, 0x25, 0x11, 0xde, 0x02, 0xe8, 0xba, 0xca, 0x1f, 0x8b,
    0xc8, 0x59, 0xe6, 0x04, 0x5b, 0x54, 0x69, 0x20, 0x6e, 0x50, 0x1f, 0x21,
    0xb8, 0x48, 0x63, 0xbd, 0x2f, 0x95, 0x84, 0x41, 0x0f, 0xc0, 0x0c, 0x07,
    0x08, 0xb2, 0xcc, 0x10, 0xa7, 0x08, 0xcd, 0x6b, 0xa4, 0xa6, 0xde, 0x97,
    0x4a, 0x8b, 0xc5, 0xe2, 0xdb, 0xa1, 0x82, 0x2c, 0x1b, 0xc4, 0x19, 0x80,
    0xb6, 0xde, 0xbe, 0x07, 0x70, 0x63, 0x34, 0x6c, 0x6e, 0xf4, 0xbe, 0xd4,
    0x3a, 0x54, 0x90, 0x52, 0xa6, 0x11, 0x1b, 0xa3, 0x85, 0x3a, 0x21, 0xf9,
    0xb7, 0x88, 0x9c, 0xe3, 0xb5, 0x1e, 0xbc, 0x27, 0xf9, 0x55, 0x1f, 0x77,
    0x09, 0xbc, 0xd4, 0xa3, 0x6f, 0xe4, 0x79, 0x8d, 0x73, 0x3a, 0x41, 0x53,
    0x80, 0x2e, 0x81, 0xb6, 0x50, 0xda, 0x10, 0x8e, 0x97, 0xf3, 0xf9, 0xdf,
    0x00, 0xa0, 0x94, 0xea, 0x50, 0x9c, 0x31, 0xc2, 0xd2, 0x3d, 0xd9, 0x77,
    0x63, 0xa7, 0x54, 0x10, 0x6d, 0xc8, 0x55, 0x8d, 0x4b, 0x48, 0xd0, 0x13,
    0x60, 0x4a, 0x60, 0xe2, 0x88, 0xb4, 0x03, 0xb2, 0x0b, 0x00, 0xab, 0xf9,
    0xfc, 0x53, 0x74, 0xdc, 0x21, 0x81, 0xac, 0x20, 0xbe, 0x23, 0xa5, 0x54,
    0x27, 0x10, 0xe7, 0x51, 0x88, 0x47, 0x71, 0x30, 0x5d, 0xfc, 0xf9, 0xf3,
    0x4f, 0xfc, 0xf7, 0x43, 0x00, 0x59, 0xb6, 0x3a, 0xd1, 0x9a, 0x22, 0x80,
    0x0e, 0x83, 0x3e, 0x00, 0xf0, 0x59, 0x26, 0xf1, 0x63, 0xd2, 0xd4, 0x91,
    0x22, 0x72, 0x65, 0xbd, 0x1e, 0x25, 0x59, 0x85, 0x58, 0xf0, 0x3c, 0xaf,
    0x53, 0x53, 0xfe, 0x77, 0xcf, 0xf3, 0x3a, 0x24, 0xe1, 0x7a, 0xfe, 0xe8,
    0xa3, 0xe3, 0x5d, 0xe5, 0xff, 0x74, 0x95, 0x4f, 0x57, 0xf9, 0x4f, 0x00,
    0xce, 0x36, 0x1d, 0x07, 0xe0, 0x0e, 0xc0, 0x4f, 0x00, 0x2d, 0x9b, 0xe9,
    0x3d, 0x8a, 0x92, 0xe8, 0xaa, 0xc6, 0x65, 0x51, 0xff, 0x65, 0x96, 0xc0,
    0xc5, 0x62, 0xf1, 0x0d, 0x00, 0x20, 0x98, 0xbd, 0x77, 0x4e, 0x92, 0x12,
    0x29, 0x22, 0x77, 0x08, 0xfb, 0xa9, 0x3d, 0x92, 0x3f, 0xac, 0x26, 0x7a,
    0xdf, 0x77, 0x7d, 0xd2, 0x92, 0xe1, 0x7a, 0xfe, 0xe7, 0xa2, 0x4b, 0x60,
    0xaa, 0x74, 0x6e, 0x28, 0x91, 0x78, 0x2d, 0x81, 0xa9, 0xe2, 0xfd, 0x28,
    0xec, 0x1d, 0xd0, 0xa1, 0x80, 0xcc, 0x0a, 0xf0, 0x1d, 0x90, 0xb9, 0x02,
    0x3c, 0x2a, 0x88, 0x79, 0x82, 0xb4, 0x05, 0x70, 0x13, 0xc8, 0x9a, 0xeb,
    0x11, 0xc0, 0x79, 0x9e, 0xf9, 0xb2, 0x77, 0x30, 0xfb, 0x06, 0x69, 0x1b,
    0x60, 0x14, 0x44, 0xe4, 0xa1, 0xe6, 0x29, 0x7e, 0xd4, 0xd8, 0x39, 0x49,
    0x88, 0x36, 0x41, 0xe6, 0x05, 0x30, 0x32, 0xa1, 0xb5, 0x5a, 0xed, 0x32,
    0x49, 0xab, 0xf5, 0x24, 0x21, 0x46, 0x00, 0xb2, 0x64, 0x0a, 0x80, 0xb3,
    0x3c, 0x01, 0x46, 0x75, 0x60, 0xd2, 0xee, 0xc7, 0x49, 0x42, 0xcc, 0x98,
    0xd1, 0x67, 0xae, 0xe7, 0x8f, 0xf2, 0x06, 0x18, 0x85, 0xbc, 0x41, 0xee,
    0x3d, 0x43, 0x8b, 0x08, 0x66, 0x67, 0xbd, 0x68, 0x80, 0x45, 0x80, 0x3c,
    0x8a, 0xce, 0x7e, 0x16, 0x49, 0xa3, 0xd1, 0x8a, 0x3a, 0xeb, 0x22, 0x72,
    0xe6, 0x7a, 0xfe, 0xa3, 0x20, 0xb8, 0x7e, 0xe9, 0xc8, 0xdb, 0xf8, 0x8f,
    0xf5, 0x8e, 0xfc, 0xc6, 0x78, 0xf3, 0x7c, 0x8c, 0x55, 0x7a, 0x88, 0xee,
    0x0a, 0x6d, 0x80, 0x13, 0x11, 0x39, 0x73, 0x95, 0x3f, 0x26, 0xe4, 0xbe,
    0x68, 0x80, 0x91, 0xf2, 0x02, 0x59, 0x3a, 0x88, 0xd2, 0x68, 0xac, 0xcd,
    0x6c, 0x93, 0x1a, 0xbb, 0x22, 0x32, 0x73, 0x95, 0x3f, 0x26, 0xe5, 0x76,
    0xb5, 0xf8, 0xbd, 0xf1, 0x19, 0x62, 0xaa, 0xff, 0xda, 0x01, 0x60, 0xa4,
    0x3c, 0x40, 0x96, 0x0e, 0xa2, 0xf7, 0xfc, 0xdc, 0xf4, 0x54, 0xfd, 0x73,
    0xf4, 0x9d, 0x01, 0xda, 0x24, 0x6e, 0xc0, 0x70, 0xbe, 0x8d, 0xeb, 0xfb,
    0x77, 0x9e, 0x5f, 0x7f, 0xca, 0x3a, 0x1e, 0x9b, 0x06, 0x60, 0x24, 0xdb,
    0x20, 0x4b, 0xf9, 0x3c, 0x51, 0x29, 0xd5, 0x21, 0x9c, 0xc1, 0x72, 0xf1,
    0xe7, 0x2f, 0xcf, 0xaf, 0x3f, 0x00, 0x68, 0x13, 0x9c, 0x38, 0x22, 0x13,
    0x3e, 0xcb, 0x64, 0xb9, 0xfc, 0xfd, 0x35, 0x4b, 0xfc, 0x59, 0x00, 0xbe,
    0x49, 0xa7, 0x8d, 0xe7, 0x91, 0xfb, 0x6e, 0x39, 0xe6, 0x15, 0xf2, 0x1a,
    0xa2, 0x83, 0xe5, 0xb1, 0x50, 0x1b, 0xad, 0xd6, 0xbd, 0x67, 0xf6, 0x31,
    0x81, 0xb4, 0x0d, 0xd0, 0x16, 0xc8, 0xbd, 0x67, 0xf4, 0xb1, 0x80, 0xcc,
    0x0b, 0xa0, 0x0d, 0x90, 0xa5, 0x6b, 0xd8, 0xc4, 0xb5, 0x58, 0x2c, 0xbe,
    0x09, 0x82, 0x7b, 0xd7, 0xf7, 0x2f, 0xd2, 0xc6, 0x61, 0xab, 0x0e, 0x7c,
    0x4f, 0xf1, 0xc6, 0x8e, 0xe7, 0xfb, 0x83, 0xc4, 0xe9, 0xd3, 0x77, 0x59,
    0xa5, 0x2d, 0xca, 0x03, 0xa0, 0x52, 0xaa, 0x43, 0xd6, 0x9a, 0x70, 0x82,
    0x1e, 0x28, 0x4d, 0x00, 0xdd, 0x55, 0x4d, 0x06, 0xfc, 0xfd, 0xfb, 0x87,
    0xd9, 0x28, 0x4b, 0x9c, 0xc6, 0x0a, 0xe2, 0x76, 0xe5, 0x01, 0xd0, 0x53,
    0xf5, 0x11, 0x85, 0xd3, 0x68, 0x4a, 0xa4, 0x50, 0x7a, 0x10, 0xb4, 0x85,
    0xc1, 0x4d, 0xda, 0x41, 0x88, 0x0a, 0xe2, 0x16, 0x15, 0x61, 0x42, 0x5f,
    0xe7, 0xb8, 0x4a, 0x77, 0x39, 0xff, 0xf3, 0xbf, 0xb4, 0xf1, 0x94, 0xbe,
    0x4e, 0x4c, 0xa3, 0x22, 0x01, 0x9a, 0x13, 0x92, 0xd3, 0xaa, 0x82, 0x18,
    0x53, 0xd1, 0x00, 0xc3, 0x3a, 0x90, 0x6f, 0xe6, 0xb4, 0xee, 0xa2, 0x93,
    0x86, 0x28, 0x8d, 0x46, 0xcb, 0x1c, 0xa2, 0xdb, 0x5b, 0x09, 0xa4, 0x33,
    0xce, 0x12, 0xe7, 0xc9, 0xd7, 0x89, 0x51, 0x6b, 0x70, 0xb5, 0x9c, 0x37,
    0x71, 0x44, 0x26, 0xd4, 0xd4, 0xc9, 0x43, 0x04, 0x00, 0xc7, 0x71, 0x1e,
    0xc4, 0x71, 0xfa, 0xc1, 0xf3, 0x73, 0xf7, 0xd8, 0x00, 0x02, 0x19, 0xcd,
    0xa9, 0xe7, 0xfb, 0x43, 0xa5, 0x54, 0xe7, 0xe3, 0x23, 0x0f, 0x57, 0x22,
    0x72, 0x47, 0xb2, 0x27, 0xc0, 0xc0, 0xf5, 0x92, 0x77, 0xb0, 0x77, 0x51,
    0x9e, 0x00, 0x01, 0x64, 0x1b, 0x76, 0x43, 0x4e, 0x53, 0x1d, 0x8a, 0x0a,
    0xd8, 0x34, 0xa9, 0xc9, 0xf2, 0xa0, 0x79, 0xcd, 0xab, 0x5f, 0xd6, 0x94,
    0xba, 0xcb, 0xf5, 0x3a, 0x2c, 0x64, 0xc4, 0x51, 0x82, 0x8c, 0x03, 0x8c,
    0x82, 0xe7, 0x79, 0x9d, 0x9a, 0x57, 0xbf, 0x3c, 0x16, 0x80, 0x56, 0x20,
    0x1e, 0x23, 0xc8, 0x6d, 0x00, 0x6d, 0x86, 0xa2, 0x00, 0x5a, 0x83, 0x78,
    0x4c, 0x20, 0xcb, 0x06, 0xd0, 0x2a, 0xc4, 0x63, 0x00, 0x59, 0x46, 0x80,
    0x24, 0xed, 0x77, 0x31, 0xa2, 0xb9, 0x22, 0x3c, 0x30, 0xaf, 0x4b, 0xc7,
    0x36, 0x94, 0xb6, 0x8b, 0x4e, 0xa2, 0x9f, 0x58, 0x66, 0x80, 0xc0, 0x09,
    0x0c, 0xbb, 0x95, 0x1d, 0x20, 0x50, 0x72, 0x88, 0xa7, 0x00, 0x10, 0x28,
    0x31, 0xc4, 0x53, 0x01, 0x08, 0xa4, 0x80, 0xa8, 0xbd, 0x34, 0xed, 0x2c,
    0xa5, 0x54, 0xa7, 0xa8, 0x21, 0xba, 0x53, 0x02, 0x08, 0x60, 0xf7, 0x2e,
    0x46, 0x78, 0xca, 0xe1, 0x76, 0x3f, 0x50, 0xd2, 0x6e, 0xc4, 0xbb, 0xd7,
    0xac, 0x2f, 0xbc, 0x05, 0x20, 0xd1, 0x98, 0x61, 0x5a, 0x88, 0x45, 0x80,
    0x3c, 0x45, 0x80, 0x24, 0xe1, 0x18, 0x1e, 0x08, 0xfb, 0xda, 0xc1, 0x79,
    0x0b, 0x78, 0x71, 0xbb, 0x7c, 0x25, 0x22, 0xa9, 0xa7, 0xfa, 0x99, 0x92,
    0x46, 0xa3, 0xe5, 0xba, 0xf5, 0xae, 0x38, 0x78, 0x24, 0x9c, 0x5b, 0xdb,
    0xa6, 0xf5, 0xe4, 0x4c, 0xa8, 0x21, 0x07, 0xe1, 0x3c, 0xc7, 0x89, 0xfe,
    0x1c, 0x23, 0x74, 0xbd, 0x7c, 0x81, 0x57, 0xd7, 0xcb, 0x5d, 0x11, 0x79,
    0xda, 0x35, 0x62, 0xfd, 0xd4, 0x7c, 0xe4, 0xf9, 0xf5, 0x27, 0x4f, 0xd5,
    0x47, 0x6e, 0xc0, 0x5b, 0x08, 0xfb, 0x01, 0x71, 0xbd, 0x5a, 0xce, 0xfb,
    0x36, 0x41, 0x9e, 0x32, 0x40, 0x00, 0x2f, 0xe6, 0xf4, 0x1c, 0xc0, 0xc8,
    0x30, 0x4b, 0x4f, 0x30, 0x5c, 0x57, 0x21, 0x34, 0x53, 0x17, 0xbb, 0x98,
    0x53, 0x00, 0x67, 0x30, 0x66, 0x31, 0xd7, 0xbc, 0xfa, 0xa5, 0xab, 0xfc,
    0x87, 0x68, 0xd5, 0x2e, 0x2c, 0x99, 0x56, 0x9c, 0xa8, 0x09, 0x5d, 0x33,
    0xa7, 0x5b, 0xd8, 0x76, 0xb9, 0xee, 0xba, 0x6a, 0x8a, 0xd0, 0x41, 0xfa,
    0x2e, 0x37, 0xc7, 0x2f, 0xea, 0xa1, 0xb7, 0xe8, 0x2e, 0x46, 0x20, 0xb7,
    0x10, 0x8e, 0xa3, 0xdf, 0x57, 0xcb, 0x79, 0x3f, 0x40, 0x6d, 0xa7, 0x78,
    0x4d, 0x9d, 0x7c, 0x09, 0xd4, 0xda, 0x06, 0x71, 0x12, 0x7b, 0x0d, 0x41,
    0x1b, 0xa1, 0xc9, 0xdd, 0x59, 0x6b, 0x99, 0xe0, 0x04, 0x3d, 0x1a, 0xf1,
    0x90, 0xfc, 0x95, 0x76, 0xd1, 0x67, 0x05, 0xd0, 0x90, 0x36, 0x49, 0x2d,
    0x84, 0x26, 0xe9, 0x1c, 0xa1, 0x19, 0xbc, 0x40, 0x68, 0x52, 0x2f, 0x00,
    0x0c, 0x01, 0x3c, 0x19, 0xe6, 0x2b, 0x91, 0x39, 0x35, 0x4c, 0xe8, 0xcb,
    0xe2, 0x10, 0x57, 0xf9, 0x0f, 0xa8, 0xd7, 0x5b, 0x49, 0xcf, 0xaf, 0x4c,
    0x68, 0xc2, 0xfc, 0x30, 0x32, 0xe6, 0x5c, 0x03, 0x8b, 0x9c, 0xca, 0xb5,
    0x00, 0x5c, 0x41, 0xd7, 0x85, 0xc6, 0x71, 0xc3, 0x34, 0x00, 0xc9, 0xf0,
    0xa9, 0x79, 0x05, 0x30, 0x47, 0x88, 0xb6, 0x33, 0x21, 0x17, 0x7f, 0x2d,
    0x15, 0xc0, 0x62, 0x20, 0xda, 0x02, 0x18, 0x37, 0xbb, 0x15, 0xc0, 0x82,
    0x20, 0xda, 0x2c, 0x81, 0x66, 0xf7, 0xa3, 0x02, 0xf8, 0x7e, 0xb0, 0xf6,
    0x50, 0xd8, 0xf6, 0xbb, 0x94, 0x22, 0xc7, 0x41, 0xcf, 0xab, 0xc5, 0x8c,
    0x64, 0x0f, 0x55, 0x2b, 0x74, 0xab, 0xac, 0xbc, 0xf0, 0x2b, 0x8f, 0x97,
    0x61, 0x91, 0xfc, 0x25, 0x22, 0xd3, 0x9a, 0xeb, 0x0d, 0xc0, 0x60, 0xb0,
    0x5a, 0xad, 0x2a, 0x80, 0xdb, 0x74, 0x48, 0x26, 0xd4, 0x0c, 0x78, 0x35,
    0xa1, 0xe7, 0x79, 0x0d, 0x9a, 0x1f, 0xb3, 0x09, 0x5d, 0xcb, 0xab, 0x5d,
    0x2f, 0xba, 0x60, 0x80, 0x51, 0x9d, 0x68, 0xfd, 0xe9, 0x47, 0x59, 0x00,
    0xee, 0x0c, 0xd1, 0x55, 0xfe, 0x4b, 0xa7, 0xbf, 0xe8, 0x6e, 0x04, 0x80,
    0x33, 0x57, 0xa9, 0x61, 0x05, 0x30, 0x2b, 0x44, 0x3d, 0x78, 0x5d, 0xf5,
    0x03, 0x0f, 0x2b, 0x24, 0x9e, 0x9e, 0x11, 0xba, 0xb0, 0xe2, 0x34, 0xaf,
    0x37, 0x7a, 0x56, 0x63, 0xa1, 0xe9, 0x95, 0xb8, 0x75, 0x4a, 0xd6, 0x9a,
    0x22, 0xec, 0x42, 0xd8, 0x5d, 0x2d, 0xe6, 0x3d, 0xd4, 0xeb, 0x4d, 0xd7,
    0xf7, 0x7b, 0x00, 0xb0, 0x9a, 0xcf, 0xff, 0xcd, 0x92, 0x88, 0x0a, 0x60,
    0x36, 0x6d, 0x2d, 0x89, 0xae, 0xef, 0x5f, 0xac, 0x79, 0xfe, 0x73, 0x82,
    0x1e, 0x80, 0x2e, 0x88, 0x59, 0x4d, 0xf9, 0x13, 0x37, 0xe0, 0xad, 0x00,
    0x5d, 0x87, 0x9c, 0x66, 0x49, 0x40, 0x05, 0xd0, 0x82, 0x36, 0xd6, 0x1b,
    0x4a, 0x5d, 0xc4, 0xdd, 0x53, 0x85, 0x9e, 0xeb, 0xd5, 0x85, 0x8d, 0xa7,
    0x10, 0x55, 0x1d, 0x68, 0x37, 0x6c, 0xdc, 0x59, 0x88, 0x07, 0xf9, 0x0a,
    0xa0, 0xb5, 0xb0, 0xd1, 0x9c, 0xe6, 0xfd, 0xda, 0xd5, 0xca, 0x84, 0xda,
    0xd5, 0xd6, 0x3a, 0x31, 0x2f, 0x90, 0x15, 0x40, 0xfb, 0x7a, 0xb7, 0x8b,
    0x61, 0xdd, 0xcd, 0x71, 0x05, 0x30, 0x17, 0x7d, 0xd8, 0x4f, 0xb4, 0x05,
    0xb2, 0x02, 0x98, 0x9f, 0x12, 0x75, 0xf6, 0xb3, 0x82, 0xac, 0x00, 0xe6,
    0xac, 0x5d, 0x5a, 0x41, 0x69, 0x5a, 0xad, 0xa8, 0x5a, 0xa1, 0x89, 0x42,
    0x92, 0xbc, 0xdc, 0x7a, 0xee, 0xae, 0x27, 0xec, 0x02, 0xb2, 0x02, 0xf8,
    0x21, 0xb8, 0x8e, 0xb1, 0x7d, 0x07, 0xe0, 0xb2, 0x10, 0x88, 0x49, 0x41,
    0x56, 0x00, 0x13, 0x41, 0xa4, 0x95, 0x78, 0xd2, 0x9e, 0xf8, 0x1e, 0xc8,
    0x43, 0x07, 0x88, 0x70, 0x6e, 0xed, 0x03, 0x80, 0x11, 0xf4, 0x14, 0x4c,
    0xbd, 0xef, 0x0e, 0xe1, 0x7c, 0xdb, 0x11, 0x5e, 0x9f, 0x65, 0x0e, 0x75,
    0x78, 0xd0, 0xbf, 0x7d, 0x36, 0xe2, 0x31, 0xf7, 0x5f, 0x19, 0xfb, 0x47,
    0x00, 0x3e, 0x43, 0x2f, 0x8d, 0xd0, 0xf1, 0x8e, 0xf4, 0x71, 0xe7, 0xc6,
    0x31, 0xd4, 0x9f, 0x97, 0xd1, 0xff, 0xc4, 0xd2, 0x32, 0xd2, 0xe1, 0xc2,
    0x88, 0xfb, 0x29, 0x8a, 0x5b, 0x87, 0x56, 0xa6, 0x8c, 0xdc, 0x04, 0xf2,
    0xd0, 0x01, 0xea, 0x8c, 0xb8, 0x42, 0x6c, 0x29, 0x9f, 0x4e, 0xf7, 0x95,
    0xde, 0x7e, 0x59, 0x9b, 0xa2, 0x33, 0xd7, 0x7c, 0xc9, 0xf3, 0x83, 0x71,
    0x9c, 0x79, 0xe3, 0x7e, 0x87, 0x5e, 0xbf, 0xa2, 0xaf, 0xdf, 0x84, 0x6a,
    0xce, 0xe5, 0xfd, 0x6e, 0xec, 0x67, 0xec, 0x86, 0x18, 0x6e, 0x48, 0xcb,
    0x59, 0x2c, 0x6e, 0xe2, 0x75, 0x5d, 0xcc, 0x10, 0xc0, 0x5d, 0xe6, 0x0c,
    0x5d, 0x7b, 0x7f, 0xae, 0xa7, 0x7e, 0x1e, 0x3a, 0x40, 0x7d, 0xf1, 0x1d,
    0x9d, 0x31, 0xe6, 0x64, 0xe9, 0xe8, 0x7b, 0x14, 0x18, 0xcf, 0x5c, 0x03,
    0xf0, 0x83, 0x01, 0x65, 0xa8, 0x4b, 0xc4, 0x4f, 0xa3, 0x94, 0x31, 0xf6,
    0x7f, 0xe7, 0x46, 0xe9, 0x31, 0xc1, 0x6d, 0x83, 0xf8, 0x33, 0x76, 0xfe,
    0xd0, 0x80, 0xca, 0x58, 0xbc, 0xa3, 0xcc, 0x6b, 0xf6, 0xa3, 0xee, 0x07,
    0x49, 0x88, 0x48, 0xd3, 0x55, 0xfe, 0x14, 0xe1, 0x02, 0x1c, 0xeb, 0xb2,
    0xd5, 0x8d, 0x60, 0xd8, 0xcd, 0xe9, 0x21, 0x5c, 0x24, 0xf4, 0xa8, 0x77,
    0x37, 0x11, 0x2e, 0xed, 0x8b, 0x42, 0x2f, 0x41, 0x54, 0x63, 0x00, 0x13,
    0x92, 0xff, 0xc7, 0x96, 0xb5, 0x2a, 0x22, 0xd2, 0x01, 0x70, 0x0b, 0xe0,
    0x5e, 0x1f, 0x67, 0x5d, 0x56, 0x1c, 0x2f, 0x2c, 0x97, 0xcb, 0xeb, 0xe7,
    0xd5, 0x72, 0x86, 0x9c, 0xc6, 0x5a, 0x01, 0xbb, 0xfd, 0x40, 0x11, 0x39,
    0x63, 0xb8, 0xea, 0x6b, 0x80, 0xd7, 0xd5, 0x5e, 0x8f, 0x08, 0x57, 0x83,
    0x7d, 0x8d, 0x82, 0x71, 0x4a, 0xcf, 0xd8, 0xbe, 0x06, 0xf0, 0xa8, 0x7d,
    0x17, 0xcc, 0x48, 0xfe, 0xab, 0xaf, 0xb5, 0xbd, 0xe5, 0xef, 0xfa, 0x00,
    0xc6, 0x24, 0xbf, 0x69, 0xa0, 0x6f, 0xd2, 0xb2, 0xe1, 0x9c, 0x47, 0x11,
    0xb9, 0x32, 0x7e, 0x1f, 0xe0, 0xf5, 0x66, 0x7b, 0xa3, 0xcc, 0x53, 0x16,
    0x5f, 0x3a, 0xf2, 0x64, 0x4f, 0x18, 0x40, 0xbf, 0xc0, 0x2a, 0x02, 0xd9,
    0xa3, 0x85, 0xa7, 0xff, 0x39, 0x74, 0xe4, 0x07, 0x22, 0xd2, 0xd7, 0xdb,
    0xd7, 0xc6, 0xe7, 0xad, 0x88, 0x8c, 0xa0, 0x17, 0xdc, 0x92, 0xfc, 0x47,
    0xff, 0x36, 0x13, 0x91, 0x07, 0x84, 0xa0, 0xc6, 0x24, 0xbf, 0x00, 0x80,
    0x88, 0x4c, 0xf4, 0x02, 0xdc, 0x29, 0xc2, 0x52, 0xb9, 0x49, 0xf7, 0x00,
    0xee, 0x75, 0xbc, 0x13, 0xac, 0x97, 0xd8, 0x1b, 0x00, 0x63, 0x11, 0xb9,
    0x89, 0x9d, 0x63, 0xa6, 0x05, 0x00, 0xae, 0xb9, 0xbe, 0xd4, 0x70, 0x5d,
    0x19, 0xeb, 0x96, 0x37, 0x8d, 0x18, 0xdb, 0x8f, 0xb1, 0xf6, 0xdd, 0x8d,
    0x40, 0xac, 0x4e, 0x3c, 0xc4, 0x90, 0xda, 0x9c, 0x6e, 0x1b, 0x4a, 0xb3,
    0x39, 0x68, 0x7e, 0xd2, 0x43, 0x69, 0xbb, 0xc8, 0x56, 0x09, 0x8c, 0x87,
    0xac, 0x25, 0x72, 0xdf, 0x25, 0xd0, 0xb8, 0xd6, 0x16, 0x8c, 0xa5, 0xef,
    0x87, 0x18, 0xd2, 0x96, 0xc4, 0x31, 0x3e, 0x18, 0xcc, 0xde, 0xa5, 0x44,
    0x7a, 0xbe, 0x3f, 0xf4, 0xbc, 0xc6, 0x79, 0xf4, 0xfd, 0x90, 0x4a, 0x20,
    0xc9, 0x1f, 0x7c, 0xaf, 0x3e, 0x3a, 0x00, 0xa5, 0x82, 0x48, 0xf2, 0xcb,
    0x7b, 0x00, 0x23, 0x25, 0x05, 0x49, 0xa0, 0x2d, 0xf2, 0x3c, 0x03, 0x0e,
    0x0b, 0xe0, 0xb1, 0x28, 0x77, 0xdf, 0x6e, 0x49, 0x40, 0x0a, 0xa5, 0xbd,
    0x58, 0x2c, 0xbe, 0x55, 0x00, 0xd3, 0xa9, 0x10, 0x07, 0x7d, 0x1f, 0x82,
    0x14, 0x34, 0x2b, 0x80, 0xe9, 0x55, 0xa8, 0xd3, 0xda, 0x4d, 0x2f, 0x42,
    0x06, 0x80, 0x68, 0x94, 0x87, 0x94, 0xdb, 0xe8, 0x2d, 0x66, 0x20, 0x66,
    0xcb, 0xc5, 0x9f, 0x5c, 0x46, 0x38, 0xca, 0xa6, 0xc2, 0x3d, 0x0f, 0xc7,
    0x41, 0x0a, 0x83, 0x01, 0xe1, 0xdc, 0x52, 0x38, 0xb5, 0xf5, 0xf6, 0xed,
    0x53, 0xd3, 0x5e, 0xdc, 0x47, 0x5b, 0x7b, 0x35, 0x79, 0x25, 0x00, 0x7b,
    0xf4, 0x01, 0x1e, 0x07, 0x99, 0xe5, 0x25, 0x90, 0xa7, 0xae, 0xff, 0x00,
    0x13, 0xd4, 0xce, 0x59, 0x64, 0xed, 0xdc, 0x4a, 0x00, 0x00, 0x00, 0x00,
    0x49, 0x45, 0x4e, 0x44, 0xae, 0x42, 0x60, 0x82
};

    static const unsigned char image1_data[] = { 
    0x89, 0x50, 0x4e, 0x47, 0x0d, 0x0a, 0x1a, 0x0a, 0x00, 0x00, 0x00, 0x0d,
    0x49, 0x48, 0x44, 0x52, 0x00, 0x00, 0x00, 0x68, 0x00, 0x00, 0x00, 0x5b,
    0x08, 0x06, 0x00, 0x00, 0x00, 0x9f, 0xf2, 0xc0, 0xa2, 0x00, 0x00, 0x06,
    0x79, 0x49, 0x44, 0x41, 0x54, 0x78, 0x9c, 0xed, 0xdd, 0xed, 0x79, 0xda,
    0x3a, 0x14, 0x07, 0xf0, 0xff, 0x01, 0x5b, 0x26, 0x9f, 0x60, 0x03, 0xd8,
    0xc0, 0xdd, 0x00, 0x36, 0x48, 0x36, 0x20, 0x77, 0x82, 0x24, 0x13, 0x90,
    0x4e, 0x40, 0xee, 0x04, 0xe1, 0x4e, 0x10, 0x3a, 0x01, 0x74, 0x82, 0xa4,
    0x13, 0x24, 0x9d, 0xa0, 0xc9, 0xa7, 0x14, 0x48, 0x39, 0xf7, 0x03, 0xc7,
    0x41, 0xb8, 0xbc, 0xd8, 0x8e, 0x6d, 0xc9, 0x44, 0xe7, 0x79, 0xf4, 0xd4,
    0x60, 0xc9, 0x56, 0xfc, 0x43, 0xb6, 0xfc, 0x22, 0x97, 0x98, 0x19, 0x36,
    0x05, 0x9d, 0x9c, 0xb4, 0xf9, 0xf5, 0xf5, 0xa7, 0xe9, 0x7a, 0xd8, 0x12,
    0x35, 0xd3, 0x15, 0xd0, 0xc3, 0x53, 0x27, 0x7d, 0x6f, 0xc9, 0x4f, 0x74,
    0x72, 0xd2, 0x36, 0x5d, 0x17, 0x5b, 0xc2, 0x1a, 0x20, 0x4f, 0x9d, 0xf4,
    0x89, 0x78, 0xc4, 0x4c, 0xe7, 0xae, 0x05, 0xad, 0xc3, 0x0a, 0x20, 0x1d,
    0xe7, 0x6d, 0xfe, 0xfa, 0x9f, 0xe9, 0xfa, 0xd8, 0x14, 0xc6, 0x81, 0x1c,
    0xce, 0xfe, 0x30, 0x0a, 0xe4, 0x70, 0x0e, 0x87, 0x31, 0x20, 0x87, 0x93,
    0x2c, 0x8c, 0x00, 0x39, 0x9c, 0xe4, 0x51, 0x3a, 0x90, 0xc3, 0x49, 0x17,
    0xa5, 0x02, 0x39, 0x9c, 0xf4, 0x51, 0x1a, 0x90, 0xc3, 0xc9, 0x16, 0xa5,
    0x00, 0x1d, 0x33, 0x0e, 0x11, 0x5d, 0x10, 0x51, 0xb3, 0xa8, 0xe5, 0x17,
    0x0e, 0x74, 0xe4, 0x38, 0xb7, 0x00, 0xae, 0x01, 0xb4, 0x0a, 0x5b, 0x09,
    0x33, 0x17, 0x96, 0xea, 0x7e, 0xa3, 0xef, 0xa9, 0x80, 0xeb, 0x7e, 0xa3,
    0x5f, 0xe4, 0x7a, 0x4c, 0x24, 0x00, 0xb7, 0x00, 0x7e, 0x01, 0x08, 0x0b,
    0x5d, 0x8f, 0xc3, 0xb1, 0x17, 0xa7, 0x30, 0x20, 0x87, 0x63, 0x31, 0x90,
    0xc3, 0xb1, 0x18, 0xc8, 0xe1, 0x58, 0x0c, 0xe4, 0x70, 0x2c, 0x06, 0x72,
    0x38, 0x16, 0x03, 0x39, 0x1c, 0x8b, 0x81, 0x1c, 0x8e, 0xc5, 0x40, 0x0e,
    0xc7, 0x62, 0x20, 0x87, 0x63, 0x31, 0x90, 0xc3, 0xb1, 0x18, 0xc8, 0xe1,
    0x58, 0x0c, 0xe4, 0x70, 0x2c, 0x06, 0x72, 0x38, 0x16, 0x03, 0x39, 0x1c,
    0x8b, 0x81, 0x1c, 0x8e, 0xf9, 0xe4, 0x70, 0x2c, 0xa8, 0x4f, 0x6a, 0x20,
    0x87, 0x63, 0x4f, 0x72, 0x38, 0x96, 0x27, 0x87, 0x63, 0x79, 0x72, 0x38,
    0x96, 0x27, 0x87, 0x63, 0x79, 0x22, 0x66, 0x86, 0x1f, 0x34, 0x18, 0xe0,
    0xeb, 0xc5, 0x6c, 0xf6, 0x35, 0xd9, 0xc3, 0x5a, 0xd5, 0x08, 0x79, 0x6e,
    0xed, 0x0c, 0x40, 0x8f, 0x99, 0x7f, 0x98, 0xae, 0x4f, 0x96, 0x58, 0x3f,
    0xb8, 0xc8, 0xd4, 0x52, 0x4a, 0x85, 0x06, 0xeb, 0x92, 0x6b, 0x1c, 0x03,
    0x0e, 0xa0, 0x01, 0x2d, 0xe6, 0xbf, 0xaf, 0x18, 0xb5, 0xf3, 0x63, 0x40,
    0x3a, 0x16, 0x1c, 0x20, 0xf6, 0xe8, 0xef, 0x31, 0x20, 0x1d, 0x13, 0x0e,
    0xb0, 0xe5, 0xd9, 0xec, 0x2a, 0x23, 0x1d, 0x1b, 0x0e, 0xb0, 0xe3, 0xe1,
    0xf9, 0x2a, 0x22, 0x1d, 0x23, 0x0e, 0xb0, 0x67, 0x74, 0x43, 0x95, 0x90,
    0x8e, 0x15, 0x07, 0x38, 0x30, 0xfc, 0xa4, 0x0a, 0x48, 0xc7, 0x8c, 0x03,
    0x24, 0x18, 0x1f, 0x64, 0x33, 0xd2, 0xb1, 0xe3, 0x00, 0x58, 0x9f, 0xa8,
    0x2e, 0x66, 0xbf, 0x69, 0x6f, 0x46, 0xa2, 0x26, 0x33, 0xbf, 0x94, 0x55,
    0xb1, 0x43, 0xf1, 0x19, 0x70, 0x80, 0x14, 0x23, 0xec, 0x1c, 0x8e, 0x99,
    0x30, 0xfe, 0x2a, 0x98, 0xb4, 0xb1, 0x0b, 0x87, 0x88, 0xba, 0x44, 0xd4,
    0x2d, 0x68, 0x9d, 0xb9, 0x2d, 0x9b, 0x88, 0x06, 0x69, 0xe6, 0x55, 0x0a,
    0xe8, 0x40, 0xcb, 0xe9, 0x49, 0x2a, 0x22, 0x52, 0x2d, 0x9b, 0x88, 0x86,
    0x44, 0x74, 0xba, 0x63, 0xf6, 0xf5, 0x9e, 0xa2, 0x7f, 0xcd, 0xab, 0x0c,
    0x50, 0xc5, 0x76, 0x6b, 0x37, 0x00, 0xa6, 0x87, 0x32, 0x11, 0xd1, 0xdd,
    0xa1, 0x96, 0x59, 0x09, 0xa0, 0x34, 0x38, 0x44, 0x34, 0x90, 0x3f, 0xfc,
    0x54, 0xfb, 0xee, 0x54, 0xbe, 0xdb, 0xd8, 0x20, 0xf2, 0x4b, 0x0f, 0xe5,
    0xfb, 0x5b, 0x22, 0x6a, 0x6f, 0x29, 0x33, 0x84, 0x8c, 0xe2, 0x26, 0xa2,
    0x26, 0x11, 0x4d, 0xb4, 0x3c, 0x7d, 0x22, 0xea, 0x6b, 0x9f, 0xef, 0x64,
    0x48, 0x7e, 0x4f, 0xea, 0x1b, 0x95, 0x19, 0x6e, 0xa9, 0xd3, 0x50, 0xf2,
    0xdd, 0xc8, 0x74, 0x7c, 0xbd, 0x03, 0x22, 0x6a, 0x82, 0x99, 0xe1, 0xa9,
    0x80, 0x4d, 0xdf, 0xf7, 0xf8, 0xe8, 0xfd, 0x1c, 0x00, 0x03, 0x00, 0x8f,
    0x00, 0xda, 0x92, 0xee, 0x01, 0xf4, 0x65, 0x5e, 0x57, 0xfe, 0x6d, 0x4b,
    0x9e, 0xa6, 0x7c, 0x9e, 0x48, 0x6a, 0x02, 0xb8, 0x00, 0x30, 0x89, 0xf2,
    0x4b, 0xf9, 0xb6, 0x56, 0x66, 0x20, 0xf3, 0x1e, 0xa3, 0xba, 0x44, 0xe5,
    0x65, 0x3a, 0x04, 0xf0, 0xa8, 0xd5, 0x65, 0xa0, 0xe5, 0xb9, 0xd0, 0xbe,
    0x67, 0xad, 0xce, 0x93, 0xa8, 0x6e, 0xf2, 0x99, 0x01, 0x0c, 0x65, 0xfa,
    0x0e, 0xc0, 0xc0, 0xea, 0x16, 0x94, 0x61, 0xb7, 0x36, 0x66, 0xe6, 0x9f,
    0xcc, 0xfc, 0x13, 0xab, 0xfd, 0x79, 0x0f, 0x00, 0x98, 0xf9, 0xbb, 0xb4,
    0x9c, 0x73, 0xc9, 0xf7, 0x45, 0x2b, 0x73, 0xcd, 0xcc, 0x2f, 0xcc, 0xfc,
    0x2f, 0xd6, 0xc7, 0x99, 0x4b, 0xf9, 0x3e, 0x5a, 0xd6, 0x48, 0x5f, 0x07,
    0x80, 0x9e, 0xb4, 0xb6, 0x67, 0x00, 0xcf, 0x32, 0xdd, 0x93, 0x79, 0x7a,
    0xfd, 0x43, 0x00, 0x2d, 0x59, 0x36, 0x98, 0xf9, 0xe0, 0xfd, 0x36, 0x66,
    0xbe, 0x92, 0xc9, 0x1b, 0x00, 0xbd, 0xdc, 0x80, 0xbc, 0x20, 0x38, 0xcd,
    0xf3, 0x64, 0x36, 0xe3, 0x31, 0xe7, 0x39, 0x36, 0xdd, 0x91, 0x65, 0xdd,
    0xcb, 0xb2, 0xa6, 0xb1, 0x3c, 0xbb, 0xa2, 0xb5, 0x27, 0xdf, 0x14, 0xeb,
    0x5d, 0xd8, 0x58, 0x3e, 0x9f, 0xc9, 0x77, 0xa3, 0x14, 0xcb, 0x49, 0x14,
    0xb9, 0x01, 0xbd, 0xcd, 0x66, 0xdf, 0xf2, 0xba, 0xe2, 0x10, 0xc7, 0xf1,
    0x82, 0xe0, 0xd4, 0x0f, 0x82, 0x41, 0x82, 0x97, 0xcd, 0x76, 0xb4, 0xe9,
    0x1e, 0x80, 0xb1, 0xfc, 0x8a, 0x9f, 0x99, 0xf9, 0x8a, 0x99, 0xbf, 0x27,
    0xac, 0xc2, 0x14, 0x9b, 0xbd, 0xb6, 0xf7, 0xe5, 0x32, 0xf3, 0x37, 0xac,
    0x5a, 0x60, 0x0f, 0x2b, 0xa0, 0xb1, 0x4c, 0x77, 0xe2, 0x3f, 0x24, 0x59,
    0xdf, 0x97, 0xe8, 0x55, 0x31, 0xfa, 0x31, 0x2e, 0x69, 0x78, 0x69, 0x0b,
    0x6c, 0x0b, 0x22, 0x1a, 0x30, 0xf3, 0xd7, 0xc5, 0xfc, 0xf7, 0x95, 0xaf,
    0x1a, 0x43, 0xa5, 0xd4, 0x68, 0x3e, 0x9f, 0x67, 0xea, 0x69, 0x6d, 0x6b,
    0x39, 0xc4, 0x74, 0x09, 0x42, 0xaf, 0xbe, 0x5c, 0x3e, 0x00, 0xd8, 0xfb,
    0xc2, 0x59, 0x29, 0x0f, 0xac, 0x37, 0x22, 0x00, 0x74, 0xe4, 0x40, 0xdc,
    0x41, 0xb2, 0x5f, 0xf4, 0x0d, 0x80, 0x29, 0x11, 0x75, 0xe4, 0x73, 0xfc,
    0x55, 0x2f, 0x0f, 0x58, 0xa1, 0xbf, 0x00, 0x78, 0x91, 0x7c, 0xd3, 0x1d,
    0xcb, 0xba, 0x04, 0xf0, 0x40, 0x44, 0x23, 0xa9, 0xd3, 0x93, 0x36, 0x6f,
    0x0a, 0xe0, 0x9a, 0x88, 0x46, 0xcc, 0xbc, 0xfd, 0x35, 0x39, 0x79, 0x74,
    0x12, 0xa0, 0x1d, 0xf8, 0x98, 0x19, 0x9e, 0x1f, 0x0c, 0x7d, 0xdf, 0x4f,
    0xfd, 0x90, 0x06, 0x76, 0x74, 0x08, 0x3c, 0xa5, 0x06, 0x75, 0xbf, 0xd1,
    0xf7, 0xfc, 0x60, 0x02, 0x39, 0xc0, 0x6f, 0x29, 0xdb, 0xc6, 0xea, 0x60,
    0xdf, 0x8e, 0x97, 0xd7, 0x0e, 0xfc, 0xd1, 0xfc, 0xa8, 0x93, 0x10, 0xea,
    0xcb, 0x83, 0x76, 0xc0, 0xd6, 0xe7, 0x47, 0xe5, 0x62, 0xeb, 0x6a, 0xc7,
    0xf2, 0xed, 0x9b, 0xdf, 0xc4, 0xba, 0x63, 0x11, 0x6e, 0x59, 0x47, 0x3b,
    0xbe, 0xfe, 0xa8, 0xcc, 0x4e, 0x20, 0x29, 0x38, 0xc9, 0x02, 0x94, 0x05,
    0x69, 0x17, 0x8e, 0x9e, 0x7c, 0xdf, 0x0f, 0xf7, 0x21, 0x1d, 0x63, 0xda,
    0x0a, 0x24, 0x38, 0xf7, 0xb2, 0xc1, 0x26, 0x9a, 0x7e, 0x1f, 0xab, 0xee,
    0xdf, 0x30, 0xf6, 0x0b, 0xf9, 0x0b, 0x28, 0x0d, 0x52, 0x12, 0x9c, 0xcf,
    0x8a, 0xb4, 0x15, 0x48, 0x36, 0x5a, 0x57, 0x6f, 0x41, 0x58, 0xf5, 0xe1,
    0x6f, 0xa5, 0xe9, 0x75, 0xb1, 0x79, 0x3e, 0xb1, 0x15, 0x28, 0x09, 0x52,
    0x1a, 0x9c, 0xcf, 0x88, 0x94, 0x06, 0xe8, 0x11, 0x9b, 0xfb, 0xeb, 0x21,
    0xd6, 0x27, 0x82, 0x3b, 0x81, 0xf6, 0x21, 0x65, 0xc1, 0xf9, 0x6c, 0x48,
    0x69, 0xba, 0xd9, 0x1d, 0xde, 0xbc, 0xe5, 0xf0, 0x7e, 0x9e, 0x71, 0x28,
    0xb6, 0xdd, 0xf4, 0xfb, 0xe8, 0xb5, 0xb5, 0xf9, 0x7c, 0xfe, 0x83, 0xb0,
    0xbc, 0xf4, 0xfc, 0x60, 0x5c, 0xe4, 0x1b, 0x0f, 0x8d, 0x47, 0x8a, 0x16,
    0x74, 0x87, 0xcd, 0x5e, 0x86, 0x7e, 0x6c, 0xda, 0xdb, 0x82, 0xb4, 0x32,
    0xd1, 0x2e, 0x31, 0x73, 0xcb, 0xf9, 0x6c, 0x2d, 0x69, 0x1f, 0x50, 0x53,
    0x36, 0xe2, 0x00, 0xd2, 0x75, 0xc5, 0xaa, 0xe3, 0x30, 0x14, 0x9c, 0xa1,
    0x96, 0x37, 0x11, 0x50, 0xde, 0x38, 0x9f, 0x01, 0x69, 0x27, 0x90, 0x86,
    0xd4, 0x8d, 0x7d, 0x17, 0xc6, 0x37, 0x44, 0x3c, 0x4f, 0x99, 0x38, 0x36,
    0x20, 0xf9, 0xbe, 0x1f, 0x7a, 0x2a, 0xb8, 0x2b, 0x1d, 0x28, 0xd7, 0x15,
    0x95, 0x30, 0xca, 0xc0, 0x04, 0x92, 0xe0, 0xfc, 0xaa, 0x2b, 0x75, 0x5b,
    0x59, 0xa0, 0x32, 0x70, 0x4c, 0x20, 0x15, 0x8d, 0xc3, 0xac, 0x0d, 0x3f,
    0x79, 0x9b, 0xcf, 0x5a, 0x9e, 0xd7, 0xf8, 0x02, 0x00, 0x4c, 0xe8, 0x10,
    0x2d, 0x3b, 0xab, 0x83, 0x4b, 0xed, 0x89, 0x18, 0x4f, 0x8b, 0xc5, 0x6b,
    0xd2, 0x0b, 0x8d, 0x1b, 0x61, 0xe2, 0x4e, 0xa8, 0x52, 0x2a, 0x64, 0xd4,
    0x6e, 0xde, 0x16, 0xb3, 0x33, 0x2e, 0xe8, 0x61, 0x17, 0xa5, 0x54, 0xc8,
    0x54, 0x9b, 0x32, 0x78, 0xfc, 0x36, 0x9b, 0xfd, 0x53, 0xc4, 0x3a, 0x00,
    0x80, 0x7c, 0xdf, 0x0f, 0x99, 0x6a, 0x0f, 0x60, 0x4c, 0x41, 0x3c, 0x05,
    0x00, 0x22, 0x7a, 0xe6, 0x3f, 0xf4, 0x00, 0x00, 0xa8, 0x2d, 0x7b, 0x60,
    0x6a, 0x31, 0xe1, 0x0c, 0xe0, 0xe9, 0x9f, 0x5a, 0xed, 0x3a, 0xe9, 0xff,
    0x90, 0x65, 0xf2, 0x36, 0x75, 0x91, 0x48, 0x65, 0xe1, 0x00, 0x48, 0xb7,
    0x8b, 0xf3, 0xbc, 0x46, 0xd7, 0x53, 0xc1, 0x7d, 0x92, 0x91, 0x78, 0xb0,
    0x60, 0x64, 0x5b, 0x11, 0xbb, 0xbb, 0x32, 0x76, 0x6b, 0x1b, 0xdb, 0x31,
    0x0d, 0x90, 0x6c, 0xf8, 0xe6, 0x21, 0xa4, 0xac, 0x38, 0x75, 0xa5, 0x4e,
    0xb3, 0x5c, 0x05, 0x2f, 0x0b, 0xa9, 0x6c, 0x9c, 0x4c, 0x40, 0x3a, 0x92,
    0xe7, 0x35, 0xba, 0x79, 0xe1, 0x44, 0x29, 0xeb, 0xad, 0x8a, 0xa2, 0x91,
    0x4c, 0xe0, 0x64, 0x06, 0x62, 0x66, 0xa0, 0xd1, 0x68, 0x7b, 0x2a, 0xb8,
    0xc7, 0xe6, 0xf5, 0xb9, 0x5c, 0x76, 0x6b, 0xb6, 0x21, 0x99, 0xc2, 0xf9,
    0x10, 0x10, 0x33, 0xc3, 0x0f, 0x82, 0x8b, 0xa8, 0xd2, 0x79, 0x1f, 0x73,
    0x6c, 0x41, 0x32, 0x89, 0xf3, 0x61, 0x20, 0xd9, 0x90, 0x13, 0x79, 0x56,
    0x2c, 0xf7, 0x0e, 0x41, 0xd1, 0x48, 0x87, 0x96, 0x6d, 0x1a, 0x27, 0x17,
    0x20, 0xd4, 0x6a, 0x85, 0xf6, 0xd6, 0x8a, 0x44, 0xaa, 0xab, 0xe0, 0xd1,
    0x66, 0x9c, 0x0f, 0x03, 0x95, 0xd5, 0x95, 0xce, 0x1b, 0xc9, 0xf7, 0xfd,
    0xb0, 0xae, 0x82, 0xc7, 0x5d, 0x7f, 0xb7, 0x2d, 0x38, 0x1f, 0x02, 0x2a,
    0xfb, 0x3c, 0xa7, 0xa8, 0x96, 0x64, 0x33, 0x4e, 0x66, 0x20, 0x53, 0x27,
    0xa1, 0x45, 0x20, 0xd9, 0x8c, 0xc3, 0xcc, 0xc9, 0x47, 0xd8, 0x45, 0x51,
    0xb1, 0x51, 0x06, 0x89, 0xa3, 0xd4, 0xcb, 0x37, 0x29, 0x22, 0xd5, 0x93,
    0xa5, 0x0e, 0xa7, 0xfc, 0x48, 0x0c, 0xe4, 0x70, 0xcc, 0x44, 0x22, 0x20,
    0x87, 0x63, 0x2e, 0x0e, 0x02, 0x39, 0x1c, 0xb3, 0xb1, 0x17, 0xc8, 0xe1,
    0x98, 0x8f, 0x9d, 0x40, 0x0e, 0xc7, 0x8e, 0xd8, 0x0a, 0xe4, 0x70, 0xec,
    0x89, 0xbf, 0x80, 0xaa, 0x8e, 0xb3, 0x6b, 0xa4, 0x5f, 0x15, 0x71, 0x00,
    0x6c, 0x5e, 0x49, 0x80, 0x05, 0xb7, 0xa9, 0x8b, 0xb8, 0xe2, 0x60, 0xe3,
    0x15, 0x82, 0xd4, 0x57, 0x12, 0xde, 0xe6, 0xb3, 0x11, 0x2a, 0xdc, 0x72,
    0xe2, 0xe1, 0xab, 0xc6, 0x90, 0xb0, 0x1c, 0x01, 0x40, 0x25, 0x5b, 0x8e,
    0xc4, 0x3b, 0xd0, 0xf2, 0xcf, 0x1b, 0x98, 0x68, 0x5c, 0xaf, 0xd5, 0x1e,
    0x4c, 0x57, 0x2a, 0xaf, 0x60, 0xd0, 0x39, 0x01, 0xad, 0xaa, 0xe2, 0x00,
    0xc0, 0xff, 0xb0, 0x24, 0x96, 0xf8, 0xfb, 0x69, 0x49, 0xfb, 0x00, 0x00,
    0x00, 0x00, 0x49, 0x45, 0x4e, 0x44, 0xae, 0x42, 0x60, 0x82
};

    switch (id) {
        case image0_ID:  { QImage img; img.loadFromData(image0_data, sizeof(image0_data), "PNG"); return QPixmap::fromImage(img); }
        case image1_ID:  { QImage img; img.loadFromData(image1_data, sizeof(image1_data), "PNG"); return QPixmap::fromImage(img); }
        default: return QPixmap();
    } // switch
    } // icon

};

namespace Ui {
    class Point_set_base: public Ui_Point_set_base {};
} // namespace Ui

QT_END_NAMESPACE

#endif // UI_POINT_SET_BASE_H
